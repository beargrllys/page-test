{"version":3,"sources":["source/image/profileImage.png","source/image/adjust.png","source/image/LOGO.png","source/menuBar.js","source/topMenu.js","source/default.js","source/profile.js","source/partContent/modalSection.js","source/footer.js","source/chatting.js","source/notice.js","source/submit.js","source/partContent/unloginedSection.js","source/partContent/loginedSection.js","source/login.js","source/myContest.js","source/signup.js","source/admin/newContest.js","source/admin/admin.js","source/admin/announce.js","source/teambuilding.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuBar","set","Logined","className","onClick","this","props","onChangeMain","bind","content","ContestData","onChangeContest","team","Nav","justify","variant","href","src","logo","alt","getMycontest","getPortfolio","getContestMenu","Component","TopMenu","Default","newProps","newState","data","contestList","lists","i","push","key","contestImage","rounded","name","Profile","abilityList","contestedList","j","ability","length","contested","profileImages","abjustIcon","email","school","Footer","Notice","state","mode","title","letter","After","Before","_num","start","Object","keys","id","e","preventDefault","setState","noticeTitle","noticeContent","noticeDate","listcontent","getContent","contentsObject","page","list","getNumberBar","rows","disabled","value","Button","getmainContent","Submit","file","_personCode","index","memberInfo","findIndex","x","contestInfo","contestData","dataSet","role","find","teammateList","memberCode","memberName","memberrole","submissionData","submissionTeam","submissioner","submissionURL","submissionDate","submissionName","UnloginedSection","Dropdown","Toggle","Menu","Form","onSubmit","memberList","loginSuccess","target","enterEmail","console","log","password","enterPW","onChangeMode","alert","Group","controlId","Label","Control","type","placeholder","signupMode","LoginedSection","userdata","Item","logout","Login","_mode","before","shouldComponentUpdate","admin","LoginedUI","MyContest","userInfo","nowContestLists","lastContestLists","k","todoList","contesting","Signup","passwordConf","abilityCount","loadData","phoneNumber","job","temp","passwordConfirm","affiliation","Text","Count","Check","label","NewContest","Row","as","TeamBuilding","onChange","copy","member","teamName","teamMate","obj","indexOf","String","handleSubmit","firstData","listSize","editMode","teamNumber","teamname","teamRole","captain","teamset","getTeamContent","cap","userData","buttonLetter","undefined","parseInt","getPersonBox","column","sm","Col","readOnly","teamEditMateList","getTeamList","teamBuildingEdit","teamPageContorol","App","contestCount","adminMode","nowLogined","mainData","members","JSON","parse","stringify","membetList","contests","contest","changeProfile","changeInfoType","changeInfo","id_pos","nowLoginUser","getChangeUserInfo","teamEdit","newList","_userInfo","changeAdminMode","_clickMode","_contestData","modeSave","getmianContent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8cdd1950.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profileImage.67e1276b.png\";","module.exports = __webpack_public_path__ + \"static/media/adjust.f711c6e9.png\";","module.exports = __webpack_public_path__ + \"static/media/LOGO.575d44c7.png\";","import React, {Component} from 'react';\nimport logo from './image/LOGO.png';\nimport './menu.css';\nimport { Nav } from 'react-bootstrap';\n\n\n\nclass MenuBar extends Component{\n\n\n  shouldComponentUpdate(set) {\n    if (set) {\n        return false;\n    }\n    return true;\n}\n\n  getPortfolio(Logined){\n    var content=null;\n    if(Logined){//로그인되었음\n      content = <div className=\"text_center menu_icon\"onClick={function(){\n        this.props.onChangeMain(\"portfolio\");\n      }.bind(this)}> 포트폴리오</div>\n      return content;\n    }\n  }\n    getMycontest(Logined){\n      var content=null;\n      if(Logined){//로그인되었음\n        content = <div className=\"text_center menu_icon\" onClick={function(){\n          this.props.onChangeMain(\"myContest\");\n        }.bind(this)}> MY 대회</div>\n        return content;\n      }\n    }\n    getContestMenu(){\n      var content=[];\n      var ContestData = this.props.ContestData;\n      if(this.props.Logined){\n      content[0] = <div className=\"text_center menu_icon\" onClick={function(){\n        this.props.onChangeContest(\"teambuilding\",ContestData[0].team);\n      }.bind(this)}> 팀빌딩</div>\n      }\n      return content;\n    }\n\n\n    render(){\n        return(\n        <div className=\"side\">\n          <Nav justify variant=\"tabs\">\n            <a className=\"logo\" href=\"/ \">\n              <img src={logo} alt=\"logo_pic\" className=\"image_size\"/>\n            </a>\n            {this.getMycontest(this.props.Logined)}\n            {this.getPortfolio(this.props.Logined)}\n            {this.getContestMenu(this.props.Logined)}\n          </Nav>\n\n        </div>\n        );\n    }\n}\n\nexport default MenuBar;","import React, { Component } from 'react';\nimport './Rside.css'\nimport { Button} from 'react-bootstrap';\nimport profileImages from './image/profileImage.png'\n\n\n\nclass TopMenu extends Component {\n    render() {\n        return (\n            <div className=\"divRight\">\n            </div>\n        );\n    }\n}\nexport default TopMenu;","import React, { Component } from 'react';\nimport './main.css'\n\nclass Default extends Component {\n\n  shouldComponentUpdate(newProps, newState) {\n    if (this.props.data === newProps.data) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    var data = this.props.data;\n    var contestList = this.props.contestList;\n    var lists = [];\n    var i = 0;\n    while (i < data) {\n      lists.push(<div className=\"Info-item\" key={contestList[i].key}>\n        <img src={contestList[i].contestImage} rounded=\"true\" ></img>\n        <div className=\"Info-title\">\n          <p>{contestList[i].name}</p>\n        </div>\n      </div>)\n      i = i + 1;\n    }\n    return (\n      <div>\n        <div className=\"choice_list\">\n          <h2 className=\"info_title\">\n            #참가한 대회\n          </h2>\n          <div className=\"Info_container\">\n            {lists}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Default;","import React, {Component} from 'react';\nimport './Rside.css'\nimport profileImages from './image/profileImage.png'\nimport abjustIcon from './image/adjust.png';\nimport Modal from './partContent/modalSection'\n\n\nclass Profile extends Component{\n\n    shouldComponentUpdate(newProps, newState) {\n      if (this.props.data === newProps.data) {\n        return false;\n      }\n      return true;\n    }\n\n    modalSetting(){\n\n    } \n    \n    render(){\n        var data = this.props.data;\n        var abilityList = [];\n        var contestedList = [];\n        var i=0, j=0;\n        while(i<data.ability.length){\n          abilityList.push(\n          <p className=\"fontMiddle\">{data.ability[i]}</p>\n          )\n          i=i+1;\n        }\n        while(j<data.contested.length){\n          contestedList.push(\n          <p className=\"fontMiddle\">{data.contested[j]}</p>\n          )\n          j=j+1;\n        }\n        return(\n          <div className=\"sideCase\">\n            <div className=\"sideTitle\"><p>포트폴리오</p></div>\n            <div className=\"profileImageBox\">\n              <img src={profileImages} alt=\"profileImage\" className=\"profileImage\"></img>\n            </div>\n            <div className=\"profileName fontLarge\">\n              <p>{this.props.data.name}\n              <button className=\"editButton\"><img src={abjustIcon} alt=\"edit\" className=\"editButton\"></img></button>\n              </p>\n            </div>\n            <div className=\"profileContent profileName\">\n              <p className=\"fontMiddle\">이메일: {this.props.data.email}</p>\n              <p className=\"fontMiddle\">소속: {this.props.data.school}</p>\n            </div>\n            <div className=\"profileContent profileName\">\n              <p className=\"fontLarge\">#능력\n              <button className=\"editButton\"><img src={abjustIcon} alt=\"edit\" className=\"editButton\"></img></button>\n              </p>\n              {abilityList}\n            </div>\n            <div className=\"profileContent profileName\">\n              <p className=\"fontLarge\">#참가경력\n              <button className=\"editButton\"><img src={abjustIcon} alt=\"edit\" className=\"editButton\"></img></button>\n              </p>\n              {contestedList}\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default Profile;","import React, {Component, useState} from 'react';\r\nimport '../ect.css'\r\nimport { Modal, Button} from 'react-bootstrap';\r\n\r\n\r\n\r\nclass ModalSection extends Component{\r\n    state={\r\n\r\n    }\r\n\r\n    render(){\r\n        const {show, setShow} = useState(false);\r\n        const handleClose = () => setShow(false);\r\n        const handleShow = () => setShow(true);\r\n        return(\r\n        <>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n              Launch demo modal\r\n            </Button>\r\n      \r\n            <Modal show={show} onHide={handleClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Modal heading</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                  Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                  Save Changes\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </>\r\n        );\r\n    }\r\n}\r\nexport default ModalSection;","import React, {Component} from 'react';\nimport './ect.css'\n\n\n\nclass Footer extends Component{\n    render(){\n        return(\n            <div className=\"footer\">Footer</div>\n        );\n    }\n}\nexport default Footer;","import React, {Component} from 'react';\nimport './Rside.css'\nimport friendPic from './image/profileImage.png'\n\n\nclass Chatting extends Component{\n    render(){\n        return(\n            <div className=\"sideCase\">\n                <div className=\"sideTitle\"><p>친구/팀원 소통</p></div>\n                <div className=\"profileContent\">\n                    <div className=\"friendListContent\">\n                        <div className=\"friendPicBox\"><img src={friendPic} alt=\"friend\" className=\"friendPic\"></img></div>\n                        <div className=\"friendText\">\n                            <p className=\"friendName\">김철수</p>\n                            <p className=\"friendExplain\">3회 아이디어톤 같이 하는 중!</p>\n                        </div>\n                        <div className=\"friendButtonBox\">\n                            <button type=\"button\" className=\"btn btn-secondary friendButton\">프로필 보기</button>\n                            <button type=\"button\" className=\"btn btn-secondary friendButton\">쪽지 보내기</button>\n                        </div>\n                    </div>\n\n                    <div className=\"friendListContent\">\n                        <div className=\"friendPicBox\"><img src={friendPic} alt=\"friend\" className=\"friendPic\"></img></div>\n                        <div className=\"friendText\">\n                            <p className=\"friendName\">김철수</p>\n                            <p className=\"friendExplain\">3회 아이디어톤 같이 하는 중!</p>\n                        </div>\n                        <div className=\"friendButtonBox\">\n                            <button type=\"button\" className=\"btn btn-secondary friendButton\">프로필 보기</button>\n                            <button type=\"button\" className=\"btn btn-secondary friendButton\">쪽지 보내기</button>\n                        </div>\n                    </div>\n\n                    <div className=\"friendListContent\">\n                        <div className=\"friendPicBox\"><img src={friendPic} alt=\"friend\" className=\"friendPic\"></img></div>\n                        <div className=\"friendText\">\n                            <p className=\"friendName\">김철수</p>\n                            <p className=\"friendExplain\">3회 아이디어톤 같이 하는 중!</p>\n                        </div>\n                        <div className=\"friendButtonBox\">\n                            <button type=\"button\" className=\"btn btn-secondary friendButton\">프로필 보기</button>\n                            <button type=\"button\" className=\"btn btn-secondary friendButton\">쪽지 보내기</button>\n                        </div>\n                    </div>\n\n                    <div className=\"friendListContent\">\n                        <div className=\"friendPicBox\"><img src={friendPic} alt=\"friend\" className=\"friendPic\"></img></div>\n                        <div className=\"friendText\">\n                            <p className=\"friendName\">김철수</p>\n                            <p className=\"friendExplain\">3회 아이디어톤 같이 하는 중!</p>\n                        </div>\n                        <div className=\"friendButtonBox\">\n                            <button type=\"button\" className=\"btn btn-secondary friendButton\">프로필 보기</button>\n                            <button type=\"button\" className=\"btn btn-secondary friendButton\">쪽지 보내기</button>\n                        </div>\n                    </div>\n                    <div className=\"iconBox\">\n                        <button className=\"iconPlus\">\n                        <svg width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" className=\"bi bi-plus-square iconPlus\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M8 3.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H4a.5.5 0 0 1 0-1h3.5V4a.5.5 0 0 1 .5-.5z\"/>\n                            <path fillRule=\"evenodd\" d=\"M7.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0V8z\"/>\n                            <path fillRule=\"evenodd\" d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n                        </svg>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chatting;","import React, { Component } from 'react';\nimport './table.css'\nimport { Button} from 'react-bootstrap';\n\n\n\nclass Notice extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode:\"list\",\n            title:\"fgwegwgew\",\n            letter:\"sdgdsdg아니라나ㅏㅡㅡ\",\n        }\n    }\n\n    shouldComponentUpdate(After, Before) {\n        if (After === Before) {\n            return false;\n        }\n        return true;\n    }\n\n    getContent(_num) {\n        var data = this.props.data;\n        var content = [];\n        var i = 0;\n        var start = _num * 10;\n        while (i < Object.keys(data).length) {\n            if (i < Object.keys(data).length) {\n                content.push(<tr onClick={function (id, e) {\n                    e.preventDefault();\n                    this.setState({\n                        title:data[id].noticeTitle,\n                        letter:data[id].noticeContent,\n                        mode:\"read\"\n                    });\n                }.bind(this,i)}><td>{i + 1}</td><td>{data[start + i].noticeTitle}</td><td>{data[start + i].noticeDate}</td></tr>);\n            }\n            i = i + 1;\n        }\n        return content;\n    }\n\n    getNumberBar() {\n        var data = this.props.data;\n        var content = [];\n        var listcontent = this.getContent(0);\n        var contentsObject = { page: [], list: [] };\n        var i = 0;\n        var page_num;\n        while (i < (Object.keys(data).length / 10)) {\n            content.push(<li className=\"page-item\"><a className=\"page-link\" >{i + 1}</a></li>);\n            i = i + 1;\n        }\n        contentsObject.list = listcontent;\n        contentsObject.page = content;\n        return contentsObject;\n    }\n\n    getmainContent() {//list read\n        var content = [];\n        content.push(\n        <div className=\"tableBox\">\n            <div className=\"columnBox\">\n                <div className=\"tableTitle\">\n                    <p>#공지사항</p>\n                </div>\n                <div className=\"\">\n                    <table className=\"table table-striped\">\n                        <thead>\n                            <tr>\n                                <th>번호</th>\n                                <th className=\"tableContentWidth\">제목</th>\n                                <th>날짜</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.getNumberBar().list}\n                        </tbody>\n                    </table>\n\n                    <div className=\"text-center\">\n                        <ul className=\"pagination\">\n                            <li className=\"page-item\"><a className=\"page-link\" href=\"/\">Previous</a></li>\n                            {this.getNumberBar().page}\n                            <li className=\"page-item\"><a className=\"page-link\" href=\"/\">Next</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>);\n        content.push(\n            <div>\n                <div className=\"tableTitle\">\n                    <p>#공지사항</p>\n                </div>\n                <div className=\"contentTitle\">\n                    <p>제목: {this.state.title}</p>\n                    <div className=\"form-group\">\n                        <textarea className=\"form-control letterBox\" id=\"exampleFormControlTextarea1\" rows=\"5\" disabled=\"true\" value={this.state.letter}\n                        />\n                    </div>\n                    <Button variant=\"dark\" className=\"backbutton\" onClick={function(){\n                        this.setState({\n                            mode:\"list\",\n                            title:\"\",\n                            letter:\"\",\n                        });\n                    }.bind(this)}>뒤로가기</Button>\n                </div>\n            </div>\n        )\n        if(this.state.mode === \"list\"){\n            return content[0];\n        }\n        else if(this.state.mode === \"read\"){\n            return content[1];\n        }\n    }\n\n    render() {\n        return (\n            <div>{this.getmainContent()}</div>\n        );\n    }\n}\nexport default Notice;","import React, { Component } from 'react';\nimport './table.css'\nimport { Button} from 'react-bootstrap';\n\n\n\nclass Submit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode:\"list\",\n            title:\"fgwegwgew\",\n            file:\"sdgdsdg아니라나ㅏㅡㅡ\",\n        }\n    }\n\n    shouldComponentUpdate(After, Before) {\n        if (After === Before) {\n            return false;\n        }\n        return true;\n    }\n\n    peopleFounder(_personCode){\n        var memberInfo = this.props.memberInfo;\n        var index;\n        index = memberInfo.findIndex(x => x.id === _personCode);\n        return memberInfo[index]\n    }\n\n    teamFounder(_personCode){\n        var memberInfo = this.props.memberInfo;\n        var contestInfo = this.props.contestData;\n        var Name,index;\n        var dataSet = {name:\"\", role:\"\"};\n        Name = memberInfo.find(x => x.id === _personCode).name;\n        for(var i=0; i<Object.keys(contestInfo[0].team.teammateList).keys; i++){\n            index = contestInfo[0].team.teammateList[i].findIndex(x => x.memberCode === _personCode);\n            dataSet.name = index.memberName;\n            dataSet.role = index.memberrole;\n        }\n        return dataSet\n    }\n\n    getContent(_num) {\n        var data = this.props.data;\n        var content = [];\n        var i = 0;\n        var start = _num * 10;\n        while (i < Object.keys(data.submissionData).length) {\n            if (i < Object.keys(data.submissionData).length) {\n                content.push(<tr onClick={function (id, e) {\n                    e.preventDefault();\n                    this.setState({\n                        title: data.submissionData[id].submissionTeam +\" / \"+ data.submissionData[id].submissioner+\" / \"+  \"제출입니다.\",\n                        letter:data.submissionData[id].submissionURL,\n                        mode:\"read\"\n                    });\n                }.bind(this,i)}><td>{i + 1}</td><td>{ data.submissionData[start + i].submissionTeam +\" / \"+  data.submissionData[start + i].submissioner+\" / \"+  \"제출입니다.\"}</td><td>{data.submissionData[start + i].submissionDate}</td></tr>);\n            }\n            i = i + 1;\n        }\n        return content;\n    }\n\n    getNumberBar() {\n        var data = this.props.data;\n        var content = [];\n        var listcontent = this.getContent(0);\n        var contentsObject = { page: [], list: [] };\n        var i = 0;\n        var page_num;\n        while (i < (Object.keys(data).length / 10)) {\n            content.push(<li className=\"page-item\"><a className=\"page-link\" >{i + 1}</a></li>);\n            i = i + 1;\n        }\n        contentsObject.list = listcontent;\n        contentsObject.page = content;\n        return contentsObject;\n    }\n\n    getmainContent() {//list read\n        var data = this.props.data;\n        var content = [];\n\n        content.push(\n        <div className=\"tableBox\">\n            <div className=\"columnBox\">\n                <div className=\"tableTitle\">\n                    <p>#{data.submissionName}</p>\n                </div>\n                <div className=\"\">\n                    <table className=\"table table-striped\">\n                        <thead>\n                            <tr>\n                                <th>제출자</th>\n                                <th className=\"tableContentWidth\">제출자료</th>\n                                <th>제출일</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.getNumberBar().list}\n                        </tbody>\n                    </table>\n\n                    <div className=\"text-center\">\n                        <ul className=\"pagination\">\n                            <li className=\"page-item\"><a className=\"page-link\" href=\"/\">Previous</a></li>\n                            {this.getNumberBar().page}\n                            <li className=\"page-item\"><a className=\"page-link\" href=\"/\">Next</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>);\n        content.push(\n            <div>\n                <div className=\"tableTitle\">\n                    <p>#{data.submissionName}</p>\n                </div>\n                <div className=\"contentTitle\">\n                    <p>제목: {this.state.title}</p>\n                    <div className=\"form-group\">\n                        <a href = {this.state.letter}><textarea className=\"form-control letterBox\" id=\"exampleFormControlTextarea1\" rows=\"5\" disabled=\"true\" value={this.state.letter}\n                        /></a>\n                    </div>\n                    <Button variant=\"dark\" className=\"backbutton\" onClick={function(){\n                        this.setState({\n                            mode:\"list\",\n                            title:\"\",\n                            letter:\"\",\n                        });\n                    }.bind(this)}>뒤로가기</Button>\n                </div>\n            </div>\n        )\n        if(this.state.mode === \"list\"){\n            return content[0];\n        }\n        else if(this.state.mode === \"read\"){\n            return content[1];\n        }\n    }\n\n    render() {\n        return (\n            <div>{this.getmainContent()}</div>\n        );\n    }\n}\nexport default Submit;","import React, {Component} from 'react';\r\nimport { Dropdown, Form, Button } from 'react-bootstrap';\r\n\r\n\r\n\r\nclass UnloginedSection extends Component{\r\n    render(){\r\n        return(\r\n            <Dropdown>\r\n            <Dropdown.Toggle variant=\"scondary\" id=\"dropdown-basic\">\r\n                Login\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n                <Form className=\"LoginBox\" onSubmit={function (e) {\r\n                    e.preventDefault();\r\n                    var memberList = this.props.memberList;\r\n                    var loginSuccess = false;\r\n                    for (var i = 0; i < Object.keys(memberList).length; i++) {\r\n                        if (memberList[i].email === e.target.enterEmail.value) {\r\n                            console.log(memberList[i].password === e.target.enterPW.value);\r\n                            if (memberList[i].password === e.target.enterPW.value) {\r\n                                this.props.onChangeMode(memberList[i]);\r\n                                alert(memberList[i].name + \"님 환영합니다.\");\r\n                                loginSuccess=true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(!loginSuccess){\r\n                        alert(\"아이디 혹은 비밀번호를 다시 확인해주세요.\")\r\n                    }\r\n\r\n                }.bind(this)}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>이메일</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter Email\" name=\"enterEmail\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>비밀번호</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" name=\"enterPW\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        로그인\r\n                        </Button>\r\n                    <Button variant=\"primary\" type=\"button\" className=\"divRight\" onClick={function (e) {\r\n                        e.preventDefault();\r\n                        this.props.signupMode(\"Signup\");\r\n                    }.bind(this)}>\r\n                        회원가입\r\n                        </Button>\r\n                </Form>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n        );\r\n    }\r\n}\r\nexport default UnloginedSection;","import React, {Component} from 'react';\r\nimport { Dropdown} from 'react-bootstrap';\r\nimport '../ect.css';\r\n\r\n\r\nclass LoginedSection extends Component{\r\n    render(){\r\n        return(\r\n                <Dropdown>\r\n                        <Dropdown.Toggle variant=\"scondary\" id=\"dropdown-basic\">\r\n                            {this.props.userdata.name}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item href=\"#/action-1\" onClick={function (e) {\r\n                                e.preventDefault();\r\n                                this.props.logout();\r\n                            }.bind(this)}>로그아웃</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n        );\r\n    }\r\n}\r\nexport default LoginedSection;","import React, { Component } from 'react';\r\nimport './Rside.css'\r\nimport '../App.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport UnloginedScetion from './partContent/unloginedSection'\r\nimport LoginedScetion from './partContent/loginedSection'\r\n\r\n\r\nclass Login extends Component {\r\n\r\n\r\n\r\n    shouldComponentUpdate(After, Before) {\r\n        if (After === Before) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    friendUI(_mode) {\r\n        var content = null;\r\n        var before;\r\n        this.shouldComponentUpdate(_mode,before)\r\n        if (this.props.data && this.props.userdata.admin === \"on\") {\r\n            if(_mode === 1){\r\n                content = <Button variant=\"light\" className=\"TopMenuBox\">사용자 모드 켜기</Button>\r\n            }\r\n            else if (_mode === -1){\r\n                content = <Button variant=\"light\" className=\"TopMenuBox\" >관리자 모드 켜기</Button>\r\n            }\r\n            before = _mode;\r\n        }\r\n        return content;\r\n    }\r\n\r\n    adminUI() {\r\n        var content = null;\r\n        if (this.props.data) {\r\n            content = <Button variant=\"outline-info\" className=\"friendBox\">친구창 열기</Button>\r\n        }\r\n        return content;\r\n    }\r\n\r\n    LoginedUI() {\r\n        var content = null;\r\n        if (this.props.data) {\r\n            content = <LoginedScetion\r\n                memberList={this.props.memberList}\r\n                data={this.props.data}\r\n                userdata={this.props.userdata}\r\n                onChangeMode={function (_mode) {\r\n                    this.props.onChangeMode(_mode);\r\n                }.bind(this)}\r\n                signupMode={function (_mode) {\r\n                    this.props.signupMode(_mode);\r\n                }.bind(this)}\r\n                logout={function () {\r\n                    this.props.logout();\r\n                }.bind(this)}\r\n            ></LoginedScetion>\r\n        }\r\n        else {\r\n            content = <UnloginedScetion\r\n                memberList={this.props.memberList}\r\n                data={this.props.data}\r\n                onChangeMode={function (_mode) {\r\n                    this.props.onChangeMode(_mode);\r\n                }.bind(this)}\r\n                signupMode={function (_mode) {\r\n                    this.props.signupMode(_mode);\r\n                }.bind(this)}\r\n                logout={function () {\r\n                    this.props.logout();\r\n                }.bind(this)}\r\n            ></UnloginedScetion>\r\n        }\r\n        return content;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loginSecBox\">\r\n                <div className=\"btn-group loginMargin\">\r\n                    {this.LoginedUI()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login;","import React, {Component} from 'react';\r\nimport './main.css'\r\nimport * as icon from 'react-bootstrap-icons';\r\n\r\n\r\n\r\nclass MyContest extends Component{\r\n    shouldComponentUpdate(newProps, newState) {\r\n        if (this.props.data === newProps.data) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n\r\n    render(){\r\n        var data = this.props.userInfo;\r\n        var lists = [];\r\n        var nowContestLists = [];\r\n        var lastContestLists = [];\r\n        var i=0,j=0,k = 0;\r\n        console.log(data.todoList.length);\r\n        while (i < data.todoList.length) {\r\n          lists.push(<div className=\"Todo-item\" key={i}>\r\n            <div className=\"Todo-title\">\r\n              <p>{data.todoList[i]}</p>\r\n            </div>\r\n          </div>)\r\n          i = i + 1;\r\n        }\r\n        while (j < data.contesting.length) {\r\n            nowContestLists.push(<div className=\"Info_item\" key={j}>\r\n              <div className=\"Info_title marginSetting\">\r\n                <p>{data.contesting[j]}</p>\r\n              </div>\r\n            </div>)\r\n            j = j + 1;\r\n          }\r\n          nowContestLists.push(<div className=\"Info_item\" key={j}>\r\n              <div className=\"Info_title\">\r\n              <icon.Plus className=\"myContestIcon\"/>\r\n              </div>\r\n            </div>)\r\n        while (k < data.contested.length) {\r\n            lastContestLists.push(<div className=\"Info_item\" key={k}>\r\n                <div className=\"Info_title marginSetting\">\r\n                <p>{data.contested[k]}</p>\r\n                </div>\r\n            </div>)\r\n            k = k + 1;\r\n          }\r\n        return (\r\n          <div>\r\n            <div className=\"Todo_choice_list\">\r\n              <h2 className=\"Todo_title\">\r\n                팀관리\r\n              </h2>\r\n              <div className=\"Todo_container\">\r\n                {lists}\r\n              </div>\r\n            </div>\r\n            <div className=\"Info_choice_list\">\r\n              <h2 className=\"Info_title\">\r\n                #참가한 대회\r\n              </h2>\r\n              <div className=\"Info_container\">\r\n                {lastContestLists}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\nexport default MyContest;","import React, { Component } from 'react';\r\nimport './ect.css'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport * as icon from 'react-bootstrap-icons';\r\nimport fs from 'fs';\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.passwordConf = false;\r\n        this.state = {\r\n            abilityCount: 1\r\n        }\r\n    }\r\n    shouldComponentUpdate(newProps, newState) {\r\n        if (this.props.data === newProps.data) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n\r\n    render() {\r\n        var loadData = this.props.memberList;\r\n        console.log(loadData);\r\n        var i = 1;\r\n        var abilityList = [];\r\n        var memberInfo = {\r\n            id: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            name: \"\",\r\n            phoneNumber: \"\",\r\n            school: \"\",\r\n            job: \"\",\r\n            ability: \"\",\r\n            admin: \"\"\r\n        };\r\n        while (i <= this.state.abilityCount) {\r\n            abilityList.push(\r\n                <Form.Control type=\"ability\" name={`ability${i}`} placeholder=\"능력\" />\r\n            )\r\n            i = i + 1;\r\n        }\r\n        return (\r\n            <div className=\"signupBox\">\r\n                <div className=\"sideTitle\"><p>회원가입</p></div>\r\n                <Form className=\"formBox\" onSubmit={function (e) {\r\n                    var ability = [];\r\n                    var temp = 1;\r\n                    e.preventDefault();\r\n                    while (temp <= i) {\r\n                        ability[temp - 1] = e.target.ability - temp.value;\r\n                        temp = temp + 1;\r\n                    }\r\n                    if (e.target.password.value === e.target.passwordConfirm.value) {\r\n\r\n                        this.passwordConf = true;\r\n                    }\r\n                    else {\r\n                        alert(\"비밀번호가 일치하지 않습니다.\");\r\n\r\n                    }\r\n                    if (this.passwordConf) {\r\n                        this.props.onSubmit(\r\n                            memberInfo.id = Object.keys(loadData).length + 1,\r\n                            memberInfo.email = e.target.email.value,\r\n                            memberInfo.password = e.target.password.value,\r\n                            memberInfo.name = e.target.name.value,\r\n                            memberInfo.phoneNumber = e.target.phoneNumber.value,\r\n                            memberInfo.school = e.target.affiliation.value,\r\n                            memberInfo.job = e.target.job.value,\r\n                            memberInfo.ability = ability,\r\n                            memberInfo.admin = e.target.admin.value,\r\n                            memberInfo.todoList = [],\r\n                            memberInfo.contesting = [],\r\n                            memberInfo.contested = []\r\n                        );\r\n                        loadData.push(memberInfo);\r\n                        this.props.onSubmit(loadData);\r\n                        alert(\"회원가입이 완료되었습니다.\");\r\n                        this.setState({\r\n                            passwordConf: false\r\n                        });\r\n                    }\r\n                }.bind(this)}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>이메일</Form.Label>\r\n                        <Form.Control type=\"email\" name=\"email\" placeholder=\"이메일\" />\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>비밀번호</Form.Label>\r\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"비밀번호\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPasswordConf\">\r\n                        <Form.Label>비밀번호  확인</Form.Label>\r\n                        <Form.Control type=\"passwordConfirm\" name=\"passwordConfirm\" placeholder=\"비밀번호 확인\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>이름</Form.Label>\r\n                        <Form.Control type=\"name\" name=\"name\" placeholder=\"이름\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPhone\">\r\n                        <Form.Label>연락처</Form.Label>\r\n                        <Form.Control type=\"phoneNumber\" name=\"phoneNumber\" placeholder=\"연락처\" />\r\n                        <Form.Text className=\"text-muted\">\r\n                            행사 진행간 연락할수 있는 연락처\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>소속</Form.Label>\r\n                        <Form.Control type=\"affiliation\" name=\"affiliation\" placeholder=\"소속\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea2\">\r\n                        <Form.Label>직군</Form.Label>\r\n                        <Form.Control type=\"job\" name=\"job\" placeholder=\"직군\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea3\">\r\n                        <Form.Label>능력</Form.Label>\r\n                        {abilityList}\r\n                        <icon.FilePlus className=\"Plusicon\" onClick={function () {\r\n                            var Count = this.state.abilityCount + 1;\r\n                            this.setState({\r\n                                abilityCount: Count\r\n                            });\r\n                        }.bind(this)} />\r\n                    </Form.Group>\r\n                    <Form.Check\r\n                        type={'checkbox'}\r\n                        id={`default-checkbox`}\r\n                        label={`관리자계정입니다.`}\r\n                        name=\"admin\"\r\n                    />\r\n                    <Button variant=\"dark\" type=\"submit\" className=\"submitButton\">\r\n                        회원가입\r\n                    </Button>\r\n                </Form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Signup;","import React, { Component } from 'react';\r\nimport './admin.css'\r\nimport { Form, Button, FormGroup } from 'react-bootstrap';\r\n\r\n\r\n\r\nclass NewContest extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"sideTitle\"><p>새로운 해커톤 개최하기</p></div>\r\n                <Form className=\"formBox\">\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>해커톤 이름</Form.Label>\r\n                        <Form.Control type=\"name\" placeholder=\"Name\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>해커톤 기간</Form.Label>\r\n                        <Form.Row>\r\n                            <Form.Row className=\"dateMargin\">\r\n                                <Form.Control type=\"date\" placeholder=\"행사 시작일\" className=\"dateHalf\" />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    부터\r\n                        </Form.Text>\r\n                            </Form.Row>\r\n                            <Form.Row className=\"dateMargin\">\r\n                                <Form.Control type=\"date\" placeholder=\"행사 종료일\" className=\"dateHalf\" />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    까지\r\n                        </Form.Text>\r\n                            </Form.Row>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>해커톤 참여인원</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"숫자\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>팀 당 인원수</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"숫자\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>해커톤 소개</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"3\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"submit\" className=\"bigButton\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default NewContest;","import React, {Component} from 'react';\r\nimport './admin.css'\r\n\r\n\r\n\r\nclass Admin extends Component{\r\n    render(){\r\n        return(\r\n            <div>Footer</div>\r\n        );\r\n    }\r\n}\r\nexport default Admin;","import React, { Component } from 'react';\r\nimport './admin.css'\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\n\r\nclass Announce extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"tableBox\">\r\n                    <div className=\"columnBox\">\r\n                        <div className=\"tableTitle\">\r\n                            <p># 공지사항</p>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>번호</th>\r\n                                        <th className=\"tableContentWidth\">제목</th>\r\n                                        <th>작성자</th>\r\n                                        <th>날짜</th>\r\n                                        <th>조회수</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>1</td>\r\n                                        <td>죄송합니다</td>\r\n                                        <td>관리자</td>\r\n                                        <td>8-27</td>\r\n                                        <td>12</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>2</td>\r\n                                        <td>안녕하세요</td>\r\n                                        <td>운영자</td>\r\n                                        <td>8-28</td>\r\n                                        <td>3</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>3</td>\r\n                                        <td>안녕히계세요</td>\r\n                                        <td>코큰자</td>\r\n                                        <td>8-29</td>\r\n                                        <td>24</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>4</td>\r\n                                        <td>감사합니다.</td>\r\n                                        <td>감사한자</td>\r\n                                        <td>8-30</td>\r\n                                        <td>53</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>5</td>\r\n                                        <td>저리 가세요</td>\r\n                                        <td>참모총장</td>\r\n                                        <td>8-31</td>\r\n                                        <td>24</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <div className=\"text-center\">\r\n                                <ul className=\"pagination\">\r\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"/\">Previous</a></li>\r\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"/\">1</a></li>\r\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"/\">2</a></li>\r\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"/\">3</a></li>\r\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"/\">Next</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Announce;","import React, {Component} from 'react';\r\nimport './ect.css'\r\nimport { Button, Form, Col, Row} from 'react-bootstrap';\r\n\r\n\r\n\r\nclass TeamBuilding extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: false,\r\n            mode:\"list\",//list, edit,new\r\n            data: this.props.data[0],\r\n            teamset:{},\r\n            teamNumber:0,\r\n        }\r\n    }\r\n\r\n    getTeamList(){\r\n        console.log(this.state.data);\r\n        var content=[];\r\n            content.push(\r\n                <div className=\"tableBox\">\r\n                <div className=\"tableTitle teamnameBox\">\r\n                    <div className=\"teamname\">\r\n                        <p>#팀구성</p>\r\n                    </div>\r\n                    <div className=\"role\">\r\n                        <Button variant=\"outline-dark\">새로운 팀 만들기</Button>\r\n                    </div>\r\n                </div>\r\n                {this.getTeamContent()}\r\n            </div>\r\n\r\n            )\r\n        return content\r\n    }\r\n\r\n    getPersonBox(_num){\r\n        var data = this.props.data;\r\n        var teammateList = [];\r\n        var cap;\r\n        var i=0;\r\n        while(i < Object.keys(data[_num].teammateList).length){\r\n            if(data[_num].captain === data[_num].teammateList[i].memberName){\r\n                cap=\"(팀장)\";\r\n            }\r\n            else{ cap=\"\";}\r\n            teammateList.push(\r\n                    <div className=\"personBox\">\r\n                        <div className=\"name\" >\r\n                            <p>이름: {data[_num].teammateList[i].memberName}{cap}</p>\r\n                        </div>\r\n                        <div className=\"role\" >\r\n                            <p>직군: {data[_num].teammateList[i].memberrole}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n            );\r\n            i=i+1;\r\n        }\r\n        return teammateList;\r\n    }\r\n\r\n    getTeamContent(){\r\n        var data = this.props.data;\r\n        var userdata = this.props.userData;\r\n        var content=[];\r\n        var buttonLetter =\"\"\r\n        var j=0;\r\n        content.push()\r\n        while(j< data.length){\r\n            if(data[j].captain === userdata.name){\r\n                buttonLetter = \"편집하기\";\r\n            }\r\n            else{\r\n                buttonLetter = \"상세보기\";\r\n            }\r\n            content.push(\r\n                <div className=\"teamBox\">\r\n                    <div className=\"tableTitle teamnameBox\">\r\n                        <div className=\"teamname\">\r\n                            <p>팀명: {data[j].teamName}</p>\r\n                        </div>\r\n                        <div className=\"editButton\">\r\n                            <Button variant=\"outline-dark\"onClick={function(j,e){\r\n                                e.preventDefault();\r\n                                var already;\r\n                                already = data[j].teammateList.find(x => parseInt(x.memberCode) === userdata.id);\r\n                                if(already === undefined){\r\n                                    this.setState({\r\n                                        data:data[j],\r\n                                        mode:\"edit\",\r\n                                        editMode:true,\r\n                                        teamNumber:j\r\n                                    });\r\n                                }\r\n                                else{\r\n                                    this.setState({\r\n                                        data:data[j],\r\n                                        mode:\"edit\",\r\n                                        editMode:false,\r\n                                        teamNumber:j\r\n                                    });\r\n                                }\r\n                            }.bind(this,j)}>{buttonLetter}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex-container\">\r\n                    {this.getPersonBox(j)}\r\n                    </div>\r\n                </div>\r\n            );\r\n            j=j+1;\r\n        }\r\n        return content;\r\n    }\r\n\r\n    onChange = (e) =>{\r\n        var copy = this.state.data;\r\n        var member = this.props.member;\r\n        copy.teamName = e.target.teamName.value;\r\n        for(var i=0; i<Object.keys(copy.teammateList).length; i++){\r\n            copy.teammateList[i].memberName = e.target.teamMate[i].value;\r\n            copy.teammateList[i].memberrole = e.target.memberrole[i].value;\r\n            let obj = member.find(x => x.name === e.target.teamMate[i].value);\r\n            let index = member.indexOf(obj)\r\n            copy.teammateList[i].memberCode = String(member[index].id);\r\n        }\r\n        this.setState({\r\n            data:copy\r\n        });\r\n    };\r\n\r\n    teamEditMateList(){\r\n        var list = [];\r\n        var i =0 ;\r\n        while(i < 5){\r\n            list.push(\r\n                <Form.Group as={Row} controlId=\"formPlaintextPassword\" className=\"titleMargin editSite\">\r\n                    <Form.Label column sm=\"2\">\r\n                    팀원:\r\n                    </Form.Label>\r\n                    <Col sm=\"4\">\r\n                    <Form.Control className=\"letterBox\" type=\"teamMate\" name=\"teamMate\" value={this.state.data.teammateList[i].memberName} readOnly={this.state.editMode}/>\r\n                    </Col>\r\n                    <Form.Label column sm=\"2\">\r\n                    직군:\r\n                    </Form.Label>\r\n                    <Col sm=\"4\">\r\n                    <Form.Control className=\"letterBox\" type=\"teamRole\" name=\"teamRole\" value={this.state.data.teammateList[i].memberrole} readOnly={this.state.editMode}/>\r\n                    </Col>\r\n                </Form.Group>\r\n            );\r\n            i=i+1;\r\n        }\r\n        return list;\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        var firstData = this.props.data;\r\n        e.preventDefault();\r\n        var member = this.props.member;\r\n        var listSize = firstData.length;\r\n        var i=0;\r\n        if(this.state.editMode){\r\n            ;\r\n        }\r\n        else{\r\n            firstData[this.state.teamNumber].teamname= e.target.teamName.value;\r\n            while(i<listSize){\r\n                firstData[this.state.teamNumber].teammateList[i].memberName=e.target.teamMate[i].value\r\n                firstData[this.state.teamNumber].teammateList[i].memberrole=e.target.teamRole[i].value\r\n                let obj = member.find(x => x.name === e.target.teamMate[i].value);\r\n                let index = member.indexOf(obj)\r\n                firstData[this.state.teamNumber].teammateList[i].memberCode = String(member[index].id);\r\n                i=i+1;\r\n            }\r\n            firstData[this.state.teamNumber].captain= e.target.teamName.value;\r\n        }\r\n        this.setState({\r\n            data:firstData,\r\n            mode:\"list\",\r\n            editMode:false\r\n        });\r\n        console.log(\"root: \",this.state.data, firstData);\r\n    }\r\n\r\n    teamBuildingEdit(){\r\n        var content=[];\r\n        var buttonLetter;\r\n        if(this.state.editMode){\r\n            buttonLetter=\"참가 하기\";\r\n        }\r\n        else{\r\n            buttonLetter=\"저장 하기\";\r\n        }\r\n        content.push(\r\n            <div className=\"teamEditBox\">\r\n                <div className=\"boxTitle\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                        <Form.Label column sm=\"2\" className=\"editSite\">\r\n                        팀명:\r\n                        </Form.Label>\r\n                        <Col sm=\"5\">\r\n                        <Form.Control className=\"letterBox\" type=\"text\" name=\"teamName\" value={this.state.data.teamName} readOnly={this.state.editMode}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    {this.teamEditMateList()}\r\n                    <Button variant=\"info\" className=\"buttonMargin\" type=\"submit\" value=\"Submit\">{buttonLetter}</Button>\r\n                    <Button variant=\"warning\" className=\"buttonMargin\" onClick={function(){\r\n                        this.setState({\r\n                            mode:\"list\",\r\n                            editMode:false\r\n                        });\r\n                    }.bind(this)}>뒤로가기</Button>\r\n                </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return content;\r\n    }\r\n\r\n    teamPageContorol(){\r\n        var content=[];\r\n        content.push(//list\r\n            <div>{this.getTeamList()}</div>\r\n        )\r\n        content.push(\r\n            <div>{this.teamBuildingEdit()}</div>\r\n        )\r\n        if(this.state.mode === \"edit\"){\r\n            return content[1];\r\n        }\r\n        else if(this.state.mode === \"list\"){\r\n            return content[0];\r\n        }\r\n    } \r\n    render(){\r\n        return(\r\n            <div>{this.teamPageContorol()}</div>\r\n        );\r\n    }\r\n}\r\nexport default TeamBuilding;","import React, { Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport membetList from './source/Data/member';\nimport contest from './source/Data/contestInfo';\nimport MenuBar from './source/menuBar';\nimport TopMenu from './source/topMenu';\nimport Default from './source/default';\nimport Profile from './source/profile';\nimport Chatting from './source/chatting';\nimport FooterBlock from './source/footer';\nimport Notice from './source/notice';\nimport Submit from './source/submit';\nimport LoginSec from './source/login';\nimport Mycontest from './source/myContest';\nimport Signup from './source/signup';\nimport Admin from './source/admin/admin';\nimport Announ from './source/admin/announce';\nimport Newcontest from './source/admin/newContest';\nimport TeamBuilding from './source/teambuilding'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      contestCount: 5,\n      adminMode: -1,//사용자모드:-1 관리자모드: 1\n      mode: 'teambuilding',\n      nowLogined: {\n        \"id\": 5,\n        \"email\": \"js_7744@naver.com\",\n        \"password\": \"7744\",\n        \"name\": \"박나리2\",\n        \"phoneNumber\": \"010-3454-0511\",\n        \"school\": \"한양대학교\",\n        \"job\": \"개발자\",\n        \"ability\": [\"Unity\", \"Game\", \"우웩\"],\n        \"admin\": \"on\",\n        \"todoList\": [\"김성은\", \"김현수\", \"박나리\", \"최민현\", \"백사림\"],\n        \"contesting\": [\"AContest\", \"BContest\", \"CContest\"],\n        \"contested\": [\"DContest\", \"EContest\",\"AContest\",\"BContest\",\"CContest\"]\n      },\n      Logined: true,\n      mainData:{},\n      members: JSON.parse(JSON.stringify(membetList)),\n      contests: JSON.parse(JSON.stringify(contest)),\n    }\n  }\n\n  getChangeUserInfo() {\n    var content;\n    content = <Profile data={this.state.nowLogined} changeProfile={function (changeInfoType, changeInfo) {\n      var id = this.state.nowLogined.id;\n      var id_pos = id - 1;\n      var firstData = this.state.members;\n      var nowLoginUser = this.state.nowLogined;\n      if (changeInfoType === \"name\") {\n        firstData[id_pos].name = changeInfo;\n        nowLoginUser.name = changeInfo;\n      }\n      else if (changeInfoType === \"ability\") {\n        firstData[id_pos].ability = changeInfo;\n        nowLoginUser.ability = changeInfo;\n      }\n      else if (changeInfoType === \"contested\") {\n        firstData[id_pos].contested = changeInfo;\n        nowLoginUser.contested = changeInfo;\n      }\n      this.setState({\n        members: firstData,\n        nowLogined: nowLoginUser\n      });\n    }.bind(this)}></Profile>;\n    return content;\n  }\n\n\n  getmianContent() {\n    var content = null;\n    if (this.state.mode === 'default') {\n      content = <Default data={this.state.contestCount} contestList={this.state.contests}></Default>;\n    }\n    else if (this.state.mode === 'portfolio') {\n      content = <div>{this.getChangeUserInfo()}</div>\n    }\n    else if (this.state.mode === 'notice') {\n      content = <Notice data = {this.state.mainData}></Notice>;\n    }\n    else if (this.state.mode === 'teambuilding') {\n      content = <TeamBuilding data = {this.state.contests[0].team} contestData={this.props.contests} userData = {this.state.nowLogined} member={this.state.members} teamEdit={function(teamNumber,editMode){\n        if(editMode){//참가하기\n        }\n        else{//저장하기\n          \n\n        }\n      }.bind(this)}></TeamBuilding>;\n    }\n    else if (this.state.mode === 'submit') {\n      content = <Submit data = {this.state.mainData} memberInfo = {this.state.members} contestData = {this.state.contests}></Submit>;\n    }\n    else if (this.state.mode === 'myContest') {\n      content = <Mycontest userInfo={this.state.nowLogined}></Mycontest>;\n    }\n    else if (this.state.mode === 'newContest') {\n      content = <Newcontest></Newcontest>;\n    }\n    else if (this.state.mode === 'Signup') {\n      content = <Signup onSubmit={function (newList) {\n        this.setState({\n          members: newList,\n          mode: \"default\"\n        });\n      }.bind(this)}\n        memberList={this.state.members}></Signup>;\n    }\n    return content;\n  }\n\n  render() {\n    return (\n      <div className=\"containers\">\n        <div className=\"topMenu\">\n          <TopMenu className=\"TopMenuBox\"></TopMenu>\n        </div>\n        <div className=\"login_section\">\n          <LoginSec onChangeMode={function (_userInfo) {\n            var temp = _userInfo;\n            this.setState({\n              mode: \"default\",\n              nowLogined: temp,\n              Logined: true\n            })\n          }.bind(this)}\n            memberList={this.state.members}\n            signupMode={function (_mode) {\n              this.setState({\n                mode: \"Signup\"\n              })\n            }.bind(this)}\n            data={this.state.Logined}\n            userdata={this.state.nowLogined}\n            logout={function () {\n              this.setState({\n                mode: \"default\",\n                nowLogined: {},\n                Logined: false\n              })\n            }.bind(this)}\n            adminMode={this.state.adminMode}\n            changeAdminMode={function () {\n              var temp = this.state.adminMode;\n              temp = temp * (-1);\n              this.setState({\n                adminMode: temp\n              })\n            }.bind(this)}\n          ></LoginSec>\n        </div>\n        <MenuBar\n          Logined={this.state.Logined}\n          onChangeMain={function (_mode) {\n            this.setState({\n              mode: _mode\n            })\n          }.bind(this)}\n          onChangeContest={function(_clickMode, _contestData){\n            var _mode;\n            var modeSave={};\n            if(_clickMode === \"notice\"){\n              _mode = \"notice\";\n              modeSave=_contestData;\n            }\n            else if(_clickMode === \"teambuilding\"){\n              _mode = \"teambuilding\";\n              modeSave=_contestData;\n            }\n            else{\n              _mode = \"submit\";\n              modeSave=_contestData;\n            }\n            this.setState({\n              mode:_mode,\n              mainData:modeSave\n            })\n          }.bind(this)}\n          ContestData = {this.state.contests}\n          > </MenuBar>\n\n        <div className=\"main\">\n          {this.getmianContent()}\n        </div>\n        <FooterBlock></FooterBlock>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}